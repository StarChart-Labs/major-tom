buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.netflix.nebula:nebula-dependency-recommender:4.2.0'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:4.2.0'
        classpath 'org.starchartlabs.flare:flare-operations-plugins:2.0.0'
        classpath 'org.starchartlabs.flare:flare-publishing-plugins:1.0.0'
    }
}

apply plugin: 'org.starchartlabs.flare.merge-coverage-reports'

allprojects{
    apply plugin: 'eclipse'
    apply plugin: 'nebula.dependency-recommender'
    apply plugin: 'org.starchartlabs.flare.dependency-reporting'

    dependencyRecommendations {
        strategy OverrideTransitives
        
        propertiesFile file: file("${rootDir}/dependencies.properties")
    }

    // Always download sources, to allow debugging
    eclipse {
        classpath {
            downloadSources=true
        }
    }

    repositories {
        mavenCentral()
    }

}

subprojects{
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'maven'
    apply plugin: 'org.starchartlabs.flare.increase-test-logging'
    apply plugin: 'org.starchartlabs.flare.source-jars'

    // Setup default test behavior, including failure logging
    test {
        useTestNG() {
            useDefaultListeners = true
        }
    }
    
    // Apply module naming to all projects
    // Add LICENSE so it is included in all JARs, as well as dependent licenses, fulfilling the "distributions include license" requirement
    jar {
        manifest {
            attributes("Automatic-Module-Name": "${project.group}.${project.name}".replaceAll("-", "."))
        }
        
        from("${rootDir}"){
            include 'LICENSE'
        }
    }
    
    // All projects should provide source code and javadoc, and upload these with any released artifacts
    sourcesJar {
        from("${rootDir}"){
            include 'LICENSE'
        }
    }

    javadocJar{
        from("${rootDir}"){
            include 'LICENSE'
        }
    }
}
