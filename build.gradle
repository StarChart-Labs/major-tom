plugins {
    id 'org.starchartlabs.flare.merge-coverage-reports' version '1.0.0'

    // Plug-ins not applied at the root level, but used in sub-projects
    id 'com.jfrog.bintray' version '1.8.5' apply false
    id 'org.starchartlabs.flare.dependency-constraints' version '1.0.0' apply false
    id 'org.starchartlabs.flare.increased-test-logging' version '1.0.0' apply false
    id 'org.starchartlabs.flare.source-jars' version '1.0.0' apply false
}

allprojects{
    apply plugin: 'eclipse'
    apply plugin: 'org.starchartlabs.flare.dependency-constraints'

    dependencyConstraints {
        file file("${rootDir}/dependencies.properties")
    }

    // Always download sources, to allow debugging
    eclipse {
        classpath {
            downloadSources=true
        }
    }

    repositories {
        mavenCentral()
    }

}

subprojects{
    apply plugin: 'java-library'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'
    apply plugin: 'org.starchartlabs.flare.increased-test-logging'
    apply plugin: 'org.starchartlabs.flare.source-jars'
    
    checkstyle {
        configFile = rootProject.file('config/checkstyle/checkstyle.xml')
        configProperties = [ 'checkstyle.config.dir' : rootProject.file('config/checkstyle') ]
        toolVersion = '8.29'
    }
     
    task checkstyleAll{}
     
    tasks.withType(Checkstyle).all { checkstyleTask -> checkstyleAll.dependsOn checkstyleTask }
     
    check.dependsOn checkstyleAll

    // Setup default test behavior, including failure logging
    test {
        useTestNG() {
            useDefaultListeners = true
        }
    }
    
    // Apply module naming to all projects
    // Add LICENSE so it is included in all JARs, as well as dependent licenses, fulfilling the "distributions include license" requirement
    jar {
        manifest {
            attributes("Automatic-Module-Name": "${project.group}.${project.name}".replaceAll("-", "."))
        }
    }
    
    tasks.withType(Jar).all {
        from("${rootDir}"){
            include 'LICENSE'
        }
    }
}
