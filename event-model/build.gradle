apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'org.starchartlabs.flare.managed-credentials'
apply plugin: 'org.starchartlabs.flare.metadata-base'
apply plugin: 'org.starchartlabs.flare.metadata-pom'

description='Models events which may be sent to the Major Tom system by external clients'

//Dependency versions managed in $rootDir/dependencies.properties
dependencies {
    compileOnly 'com.google.code.findbugs:jsr305'
    
    api 'com.google.code.gson:gson'
    api 'org.starchartlabs.alloy:alloy-core'
}

credentials {
    bintray {
        environment 'BINTRAY_USER', 'BINTRAY_API_KEY'
    }
}

projectMetaData {
    github {
        repository 'StarChart-Labs', 'major-tom'
        
        developers file("${rootDir}/developers.properties")
    }
    
    licenses {
        mit()
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

// If not a remote run, publish to local only
if(!project.hasProperty('remoteDeploy')){
    publishing {
        repositories {
            mavenLocal()
        }
    }
}

bintray {
    publications = [ 'maven' ]
    user = System.getProperty('bintray_user')
    key = System.getProperty('bintray_key')

    if(!project.hasProperty('remoteDeploy')){
        dryRun = true
    }

    pkg {
        repo = 'major-tom'
        name = "${project.name}"
        userOrg = 'starchart-labs'
        licenses = ['MIT']
        vcsUrl = "${projectMetaData.scm.vcsUrl}"

        version {
            name = "${project.version}"
            desc = "${project.name} release ${project.version} final"
            released  = new Date()
            vcsTag = "${project.version}"

            gpg {
                sign = true
            }
        }
    }
}
