apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'org.starchartlabs.flare.metadata-base'
apply plugin: 'org.starchartlabs.flare.metadata-pom'

description='Models events which may be sent to the Major Tom system by external clients'

//Dependency versions managed in $rootDir/dependencies.properties
dependencies {
    compileOnly 'com.google.code.findbugs:jsr305'
    
    api 'com.google.code.gson:gson'
    api 'org.starchartlabs.alloy:alloy-core'
}

projectMetaData {
    github {
        repository 'StarChart-Labs', 'major-tom'
        
        developers file("${rootDir}/developers.properties")
    }
    
    licenses {
        mit()
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            
            repositories {
                // If not a remote run, publish to local only
                if(!project.hasProperty('remoteDeploy')){
                    mavenLocal()
                    
                    project.logger.lifecycle('Configured for local publishing')
                }else{
                    maven {
                        if(!version.endsWith("SNAPSHOT")){
                            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                            
                            project.logger.lifecycle('Configured for release publishing')
                        }else{
                            url "https://oss.sonatype.org/content/repositories/snapshots/"
                            
                            project.logger.lifecycle('Configured for snapshot publishing')
                        }
                        
                        credentials {
                            username System.getenv("OSSRH_USERNAME")
                            password System.getenv("OSSRH_PASSWORD")
                        }
                    }
                }
            }
        }
    }
}

signing {
    required { project.hasProperty('remoteDeploy') || project.hasProperty('sign') }
    
    useInMemoryPgpKeys(System.getenv("OSSRH_SIGNING_KEY"), System.getenv("OSSRH_SIGNING_PASSWORD"))

    sign publishing.publications.maven
}

// If not a remote run, publish to local only
if(!project.hasProperty('remoteDeploy')){
    publishing {
        repositories {
            mavenLocal()
        }
    }
}
